from Minilanguage import *

%lexer

[a-zA-Z_][a-zA-Z0-9_]* TOKEN
[a-zA-Z_][a-zA-Z0-9_\-]* PROPTOKEN
"([^"]|\\")+" STRLITERAL
\s+ %restart
\#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{4}|[0-9A-Fa-f]{6}|[0-9A-Fa-f]{8}) LCOLOURLITERAL
([0-9]*\.[0-9]+|[0-9]+\.[0-9]*) FLOATLITERAL
([0-9]+) INTLITERAL

%parser

cssfile:
    %empty
    cssfile rule

rule:
    selectors "{" block "}":
        $$.sem = Rule($1.sem, $3.sem)

block:
    %empty
    block property:
        $$.sem = $1.sem
        $$.sem.update($2.sem)

propertyName:
    PROPTOKEN:
        $$.sem = $1.sem
    TOKEN:
        $$.sem = $1.sem

property:
    propertyName ":" propvalue ";":
        $$.sem = {$1.sem: $3.sem)

selectors:
    selectors "," selector:
        if isinstance($1.sem, Or):
            $$.sem = $1.sem
        else:
            $$.sem = Or($1.sem)
        $$.sem.addSelector($3.sem)
    selector:
        $$.sem = $1.sem

selector:
    constrainedToken:
        $$.sem = $1.sem
    selector ">" constrainedToken:
        $$.sem = DirectChildOf($3.sem, $1.sem)
    selector constrainedToken:
        $$.sem = ChildOf($2.sem, $1.sem)

constrainedToken:
    TOKEN:
        $$.sem = Is($1.sem)
    TOKEN "[" attributes "]":
        $$.sem = HasAttributes($1.sem, $3.sem)
    TOKEN "." TOKEN:
        $$.sem = HasCSSClass($1.sem, $3.sem)

attributes:
    attributes "," attribute:
        $$.sem = $1.sem
        $$.sem.append($3.sem)
    attribute:
        $$.sem = [$1.sem]
    
attribute:
    TOKEN "=" STRLITERAL:
        $$.sem = ($1.sem, $3.sem)
    TOKEN:
        $$.sem = ($1.sem,)

propvalue:
    value:
        $$.sem = $1.sem
    boxliteral:
        $$.sem = $1.sem
    borderliteral:
        $$.sem = $1.sem
    LCOLOURLITERAL:
        $$.sem = $1.sem[1:]

value:
    number:
        $$.sem = $1.sem
    call:
        $$.sem = $1.sem
    TOKEN:
        $$.sem = $1.sem
    STRLITERAL:
        $$.sem = $1.sem

boxliteral:
    number number number number:
        $$.sem = "box(" + $1.sem + "," + $2.sem + "," + $3.sem + "," + $4.sem + ")"
    number number:
        $$.sem = "box(" + $1.sem + "," + $2.sem + ")"

borderliteral:
    number TOKEN colourliteral:
        $$.sem = "border(" + $1.sem + " " + $2.sem + " " + $3.sem + ")"

colourliteral:
    LCOLOURLITERAL:
        $$.sem = $1.sem[1:]
    call:
        $$.sem = $1.sem

number:
    INTLITERAL:
        $$.sem = $1.sem
    FLOATLITERAL:
        $$.sem = $1.sem

call:
    TOKEN "(" arguments ")":
        $$.sem = $1.sem + "(" + $3.sem + ")"

arguments:
    %empty:
        $$.sem = ""
    arguments "," argument:
        $$.sem = $1.sem + "," + $3.sem
    argument:
        $$.sem = $1.sem

argument:
#    TOKEN "=" value:
#        $$.sem = $1.sem + "=" + $3.sem
    value:
        $$.sem = $1.sem

